import { User } from 'auth0';
import { ObjectId } from 'bson';
import { ICollectionDTO } from './dto';
import { IClassSession } from './session';

export interface IClass {
    _id?: string;
    name: string;
    description: string;
    acronym: string; // Used to name resources related to this class
    createdOn: Date; // When the record was first created
    schedule: Schedule; // Pattern for scheduling the class
    startDate0Z: string; // Date when class starts ('YYYY/MM/DD')
    waitlisting: boolean; // Are we accepting waitlists for this class?
    open: boolean; // Is the class open for enrollment?
    durationMins: number; // ScheduledStartTime + durationMins
    lobbyTimeMins: number; // Duration of lobby time before/after instruction
    numSessions: number; // Number of sessions, usually 24
    courseId: ObjectId; // The associated course
    courseName?: string;
    capacity: number; // The maximum number of diads
    instructorId: string; // Auth0 ID of the instructor for the class
    instructorData?: User;
    participants: [string]; // Students currently enrolled, in order of assigned seating
    participantsData?: User[];
    sessions: [IClassSession];
    helpMessage: string;
    checkPageHelpMessage: string;
    program: string;
    disableEmails?: boolean;

    // ui specific fields that are generated by ui
    status?: string;
    instructorNickname?: string;
    filled?: boolean;
    participantsOf?: string;
    programShortName?: string;
}

export interface Schedule {
    weekdays: string[]; // Weekdays class is typically held
    startTime: TimeOfDay; // The nominal time of day that instruction starts, including timezone
}

export interface TimeOfDay {
    hour: number;
    mins: number;
    tz: string;
}
export interface IClassCollectionDTO extends ICollectionDTO<IClass> {}
